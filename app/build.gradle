buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.22.1'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    defaultConfig {
        applicationId "arun.com.chromer"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 26
        versionName "1.6.1"

        buildConfigField "String", "BASE_64", getBase64()
        manifestPlaceholders = [crashlyticsApiKey: getFabricKey()]

        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "app_name", "Chromer"

            lintOptions {
                disable 'MissingTranslation'
            }
        }
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '- dev'
            resValue "string", "app_name", "Chromer - dev"
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'

    // Support
    compile 'com.android.support:design:25.1.0'
    compile 'com.android.support:customtabs:25.1.0'
    compile 'com.android.support:cardview-v7:25.1.0'
    compile 'com.android.support:preference-v14:25.1.0'
    compile 'com.android.support:palette-v7:25.1.0'
    // ----

    compile 'com.github.paolorotolo:appintro:4.1.0'

    compile 'com.mikepenz:community-material-typeface:1.5.54.2@aar'
    compile('com.mikepenz:materialdrawer:5.3.6@aar') {
        transitive = true
    }

    compile 'de.psdev.licensesdialog:licensesdialog:1.8.1'

    compile 'com.github.afollestad.material-dialogs:core:0.8.6.1'
    compile 'com.github.afollestad.material-dialogs:commons:0.8.6.1'

    compile 'com.jakewharton.timber:timber:4.3.1'
    compile 'com.jakewharton:butterknife:8.4.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'

    compile 'com.github.satyan:sugar:1.5'
    compile 'com.github.bumptech.glide:glide:3.7.0'

    compile 'com.flipboard:bottomsheet-core:1.5.1'
    compile 'com.flipboard:bottomsheet-commons:1.5.1'

    compile 'com.facebook.rebound:rebound:0.3.8'

    compile 'org.jsoup:jsoup:1.10.1'

    compile 'com.github.nekocode:Badge:1.2'

    compile('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true;
    }

    // Reactive
    compile 'io.reactivex:rxjava:1.2.4'
    compile 'com.jakewharton.rxbinding:rxbinding:1.0.0'
    compile 'io.reactivex:rxjava:1.1.6'
}

static def getBase64() {
    try {
        Properties properties = new Properties()
        properties.load(new FileInputStream("values.properties"))
        return "\"" + properties.getProperty("BASE_64") + "\""
    } catch (Exception ignored) {
        return "\"\""
    }
}

static def getFabricKey() {
    try {
        Properties properties = new Properties()
        properties.load(new FileInputStream("values.properties"))
        return properties.getProperty("FABRIC_KEY")
    } catch (Exception ignored) {
        return ""
    }
}